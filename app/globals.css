@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;500;600;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer components {
  .neon-text {
    text-shadow: 0 0 5px rgba(255, 0, 0, 0.7);
  }
  
  .cyberpunk-border {
    @apply border border-phantom-red/30 relative backdrop-blur-sm;
    box-shadow: 0 0 10px rgba(255, 0, 0, 0.1);
    clip-path: polygon(0 4px, 4px 0, calc(100% - 4px) 0, 100% 4px, 100% calc(100% - 4px), calc(100% - 4px) 100%, 4px 100%, 0 calc(100% - 4px));
  }

  .cyber-grid {
    background-image: 
      linear-gradient(rgba(255, 0, 0, 0.03) 1px, transparent 1px),
      linear-gradient(90deg, rgba(255, 0, 0, 0.03) 1px, transparent 1px);
    background-size: 64px 64px;
    background-position: center;
  }

  .cyber-text {
    @apply font-orbitron font-light tracking-wider;
    text-shadow: 0 0 1px rgba(255, 0, 0, 0.5);
    position: relative;
  }

  .cyber-text::after {
    content: attr(data-text);
    position: absolute;
    left: -1px;
    top: 0;
    color: #FF0000;
    opacity: 0.15;
    filter: blur(0.3px);
    animation: textPulse 4s infinite alternate-reverse;
  }

  @keyframes textPulse {
    0%, 100% {
      opacity: 0.15;
    }
    50% {
      opacity: 0.3;
    }
  }

  .scanline {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      to bottom,
      transparent 50%,
      rgba(255, 0, 0, 0.02) 50%
    );
    background-size: 100% 3px;
    pointer-events: none;
    z-index: 50;
    opacity: 0.5;
  }

  .glitch {
    animation: glitch 1s linear infinite;
    position: relative;
  }

  .glitch::before,
  .glitch::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  .glitch::before {
    left: 2px;
    text-shadow: -2px 0 #00fff9;
    clip: rect(24px, 550px, 90px, 0);
    animation: glitch-anim 3s infinite linear alternate-reverse;
  }

  .glitch::after {
    left: -2px;
    text-shadow: -2px 0 #ff00c1;
    clip: rect(85px, 550px, 140px, 0);
    animation: glitch-anim 2s infinite linear alternate-reverse;
  }

  @keyframes glitch {
    2%, 64% {
      transform: translate(2px,0) skew(0deg);
    }
    4%, 60% {
      transform: translate(-2px,0) skew(0deg);
    }
    62% {
      transform: translate(0,0) skew(5deg);
    }
  }

  .cyber-pattern {
    position: absolute;
    inset: 0;
    background: 
      radial-gradient(circle at 50% 50%, rgba(255, 0, 0, 0.03) 0%, transparent 50%),
      radial-gradient(circle at 80% 20%, rgba(255, 0, 0, 0.05) 0%, transparent 40%),
      radial-gradient(circle at 20% 80%, rgba(255, 0, 0, 0.04) 0%, transparent 40%);
    animation: patternPulse 8s ease-in-out infinite;
  }

  .circuit-pattern {
    position: absolute;
    inset: 0;
    opacity: 0.03;
    background-image: url("data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M10 50h20m-10 -10v20M70 50h20m-10 -10v20' stroke='%23FF0000' stroke-width='0.5'/%3E%3Ccircle cx='50' cy='50' r='2' fill='%23FF0000' opacity='0.5'/%3E%3C/svg%3E");
    background-size: 100px 100px;
    animation: fadeInOut 10s ease-in-out infinite;
  }

  @keyframes patternPulse {
    0%, 100% {
      opacity: 0.5;
      transform: scale(1);
    }
    50% {
      opacity: 0.7;
      transform: scale(1.2);
    }
  }

  @keyframes fadeInOut {
    0%, 100% { opacity: 0.02; }
    50% { opacity: 0.04; }
  }

  .hex-pattern {
    position: absolute;
    inset: 0;
    opacity: 0.08;
    background-image: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M15 0L0 30l15 30h30l15-30L45 0H15zm0 0' fill='none' stroke='%23FF0000' stroke-width='1.5'/%3E%3C/svg%3E");
    background-size: 100px 100px;
    animation: fadeInOut 8s ease-in-out infinite;
  }

  .matrix-bg {
    position: absolute;
    inset: 0;
    background: 
      repeating-linear-gradient(transparent, transparent 50px, rgba(255, 0, 0, 0.1) 50px, transparent 100px);
    background-size: 100px 100px;
    animation: matrixMove 15s linear infinite;
  }

  @keyframes matrixMove {
    from {
      transform: translateY(0);
    }
    to {
      transform: translateY(-100px);
    }
  }
} 